name: Release

on:
  workflow_dispatch: # allows to be run manually
    inputs:
      version_to_bump:
        description: 'Version to bump'
        required: true
        type: choice
        options:
          - '-'
          - patch
          - minor
          - major

jobs:
  check_is_default_branch:
    runs-on: ubuntu-20.04
    steps:
      - name: Stop on non-default branch
        if: github.ref != format('refs/heads/{0}', github.event.repository.default_branch)
        run: |
          echo "It's only possible to prepare a release from the default branch (${{ github.event.repository.default_branch }})." 1>&2
          exit 1
  prepare_release:
    needs: check_is_default_branch
    runs-on: ubuntu-20.04
    steps:
      - name: Clone repository
        uses: actions/checkout@v3
      - name: Set release commit author
        run: |
          git config --local user.email '${{ github.actor }}@users.noreply.github.com'
          git config --local user.name '${{ github.actor }}'
      - name: Bump version
        run: make bump_${{ inputs.version_to_bump }}_version_in_container # also creates the commit and tag
      - name: Push release commit
        uses: ad-m/github-push-action@v0.6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}
          tags: true
      - name: Output - release tag
        id: output_release_tag
        run: echo "::set-output name=release_tag::$(git describe --tags --exact-match --abbrev=0)"
    outputs:
      release_tag: ${{ steps.output_release_tag.outputs.release_tag }}
  build:
    needs: prepare_release
    uses: ./.github/workflows/build.yml
    with:
      checkout_ref: ${{ format('refs/tags/{0}', needs.prepare_release.outputs.release_tag) }}
  create_release:
    needs:
      - prepare_release
      - build
    runs-on: ubuntu-20.04
    steps:
      - name: Download built add-on for release
        uses: actions/download-artifact@v3
        with:
          name: ${{ needs.build.outputs.production_artifact_name }}
          path: dist
      - name: Prepare release packages
        run: cp ./dist/**/pontoon_add-on-*.zip ./dist/**/privacy-policy-*.html .
      - name: Create GitHub release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag_name: ${{ needs.prepare_release.outputs.release_tag }}
          files: |
            pontoon_add-on-*.zip
            privacy-policy-*.html
          fail_on_unmatched_files: true
          draft: false
          prerelease: false
