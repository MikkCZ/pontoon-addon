name: Build

on:
  push:
    branches:
      - master
  pull_request:
  workflow_dispatch: # allows to be run manually
  workflow_call: # when called from another workflow
    inputs:
      checkout_ref:
        required: true
        type: string
    outputs:
      production_artifact_name:
        value: ${{ jobs.build.outputs.production_artifact_name }}

env:
  PREPARED_NODE_MODULES_ARTIFACT_NAME: node_modules
  PRODUCTION_ARTIFACT_NAME: dist
  DEVELOPMENT_ARTIFACT_NAME: dist-development

jobs:
  prepare_cache:
    # to populate the cache for the following jobs that have this one in 'needs'
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Clone and prepare
        uses: ./.github/actions/clone_and_prepare.yml
        with:
          ref: ${{ inputs.checkout_ref }}
  build_dev:
    needs: prepare_cache
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Clone and prepare
        uses: ./.github/actions/clone_and_prepare.yml
        with:
          ref: ${{ inputs.checkout_ref }}
      - name: Build add-on (development version)
        run: make build_in_container
        env:
          MODE: development
      - name: Save built add-on (development version)
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.DEVELOPMENT_ARTIFACT_NAME }}
          path: dist
          retention-days: 30
  build:
    needs: prepare_cache
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Clone and prepare
        uses: ./.github/actions/clone_and_prepare.yml
        with:
          ref: ${{ inputs.checkout_ref }}
      - name: Build add-on
        run: make build_in_container
      - name: Save built add-on
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.PRODUCTION_ARTIFACT_NAME }}
          path: dist
          retention-days: 30
    outputs:
      production_artifact_name: ${{ env.PRODUCTION_ARTIFACT_NAME }}
  test:
    needs: prepare_cache
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Clone and prepare
        uses: ./.github/actions/clone_and_prepare.yml
        with:
          ref: ${{ inputs.checkout_ref }}
      - name: Run tests
        run: make test_in_container
      - name: Upload code coverage to Codecov
        uses: codecov/codecov-action@v3
  generated_code_consistency:
    needs: prepare_cache
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Clone and prepare
        uses: ./.github/actions/clone_and_prepare.yml
        with:
          ref: ${{ inputs.checkout_ref }}
      - name: Generate GraphQL code
        run: make graphql_generate
      - name: Check changes in generated code
        run: |
          git status
          git diff
          UNCOMMITTED_CHANGES="$(git status --porcelain)"
          if [ -n "${UNCOMMITTED_CHANGES}" ]; then
            echo 'Found uncommitted changes' >&2
            exit 1
          fi
